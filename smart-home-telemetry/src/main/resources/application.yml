spring:
  datasource:
    url: jdbc:postgresql://${PG_HOST:localhost}:5432/smart_home_telemetry
    username: your_username
    password: your_password
    hikari:
      allow-pool-suspension: true
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        boot.allow_jdbc_metadata_access: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: always
      schema-locations: classpath:init.sql
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "*"
    consumer:
      group-id: ${KAFKA_GROUP:smart-home-telemetry}
      client-id: ${KAFKA_CLIENT:client-1}
      bootstrap-servers: ${KAFKA_HOST:localhost}:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
server:
  port: 8080
otel:
  logs:
    exporter: none
  metrics:
    exporter: none
  instrumentation:
    kafka:
      experimental-span-attributes: true
  propagators:
    - tracecontext
    - b3
  sdk:
    disabled: false
  service:
    name: smart-home-telemetry.spring
  exporter:
    otlp:
      protocol: grpc
      endpoint: http://${OTLP_HOST:localhost}:4317